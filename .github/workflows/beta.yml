name: Build Blue Archive Linux ISO

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type to use'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - stable

jobs:
  build-iso:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Install Docker
      run: |
        # Docker is already installed on GitHub runners, but let's ensure it's running
        sudo systemctl start docker
        sudo systemctl enable docker
        
        # Add current user to docker group to avoid permission issues
        sudo usermod -aG docker $USER
        
        # Verify Docker installation
        docker --version
    
    - name: Configure build type
      run: |
        # Set build type based on workflow dispatch input or default to debug
        BUILD_TYPE="${{ github.event.inputs.build_type || 'debug' }}"
        echo "BUILD_TYPE := $BUILD_TYPE" > .build_config
        echo "Configured build type: $BUILD_TYPE"
        cat .build_config
    
    - name: Build ISO using Makefile
      run: |
        echo "Starting ISO build process..."
        make build
    
    - name: Verify ISO creation
      run: |
        # Check if ISO file was created in home directory
        ls -la ~/
        ISO_FILE=$(find ~/ -name "Blue_Archive_Linux_amd64-*.iso" -type f | head -1)
        if [ -z "$ISO_FILE" ]; then
          echo "Error: No ISO file found!"
          exit 1
        fi
        echo "ISO file found: $ISO_FILE"
        echo "ISO_FILE=$ISO_FILE" >> $GITHUB_ENV
        
        # Get file size for artifact naming
        ISO_SIZE=$(du -h "$ISO_FILE" | cut -f1)
        echo "ISO size: $ISO_SIZE"
        echo "ISO_SIZE=$ISO_SIZE" >> $GITHUB_ENV
        
        # Get build type for artifact naming
        BUILD_TYPE=$(grep "BUILD_TYPE" .build_config | cut -d' ' -f3)
        echo "BUILD_TYPE=$BUILD_TYPE" >> $GITHUB_ENV
    
    - name: Upload ISO as artifact
      uses: actions/upload-artifact@v4
      with:
        name: Blue-Archive-Linux-ISO-${{ env.BUILD_TYPE }}-${{ github.run_number }}
        path: ${{ env.ISO_FILE }}
        retention-days: 30
        compression-level: 0  # No compression since ISO is already compressed
    
    - name: Upload build logs
      if: always()  # Upload logs even if build fails
      uses: actions/upload-artifact@v4
      with:
        name: build-logs-${{ github.run_number }}
        path: |
          .build_config
        retention-days: 7
    
    - name: Clean up
      if: always()
      run: |
        make clean || true
        # Clean up any remaining Docker containers/images
        docker system prune -f || true
